// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Laba3.Migrations
{
    [DbContext(typeof(ClubContext))]
    partial class ClubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClubOwner", b =>
                {
                    b.Property<int>("ClubsclubId")
                        .HasColumnType("integer");

                    b.Property<int>("OwnersownerId")
                        .HasColumnType("integer");

                    b.HasKey("ClubsclubId", "OwnersownerId");

                    b.HasIndex("OwnersownerId");

                    b.ToTable("ClubOwner");
                });

            modelBuilder.Entity("TourDBMS.Club", b =>
                {
                    b.Property<int>("clubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("clubId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("clubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("TourDBMS.Owner", b =>
                {
                    b.Property<int>("ownerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ownerId"));

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ownerId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("TourDBMS.Team", b =>
                {
                    b.Property<int>("teamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("teamId"));

                    b.Property<int>("clubId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("teamId");

                    b.HasIndex("clubId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ClubOwner", b =>
                {
                    b.HasOne("TourDBMS.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubsclubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourDBMS.Owner", null)
                        .WithMany()
                        .HasForeignKey("OwnersownerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourDBMS.Team", b =>
                {
                    b.HasOne("TourDBMS.Club", "Clubs")
                        .WithMany("Teams")
                        .HasForeignKey("clubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clubs");
                });

            modelBuilder.Entity("TourDBMS.Club", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
